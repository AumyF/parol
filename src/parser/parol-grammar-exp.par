%start Parol
%title "Parol grammar"
%comment "Parol's own grammar"
%line_comment "//"
%block_comment "/\*" "\*/"

%%

/*  0 */ Parol: Prolog GrammarDefinition;
/*  1 */ Prolog: StartDeclaration PrologList /* Vec */ PrologList0 /* Vec */;
/*  2 */ PrologList0: ScannerState PrologList0; // Vec<T>::Push
/*  3 */ PrologList0: ; // Vec<T>::New
/*  4 */ PrologList: Declaration PrologList; // Vec<T>::Push
/*  5 */ PrologList: ; // Vec<T>::New
/*  6 */ StartDeclaration: "%start" /* Clipped */ Identifier;
/*  7 */ Declaration: "%title" /* Clipped */ String;
/*  8 */ Declaration: "%comment" /* Clipped */ String;
/*  9 */ Declaration: ScannerDirectives;
/* 10 */ ScannerDirectives: "%line_comment" /* Clipped */ String;
/* 11 */ ScannerDirectives: "%block_comment" /* Clipped */ String String;
/* 12 */ ScannerDirectives: "%auto_newline_off" /* Clipped */;
/* 13 */ ScannerDirectives: "%auto_ws_off" /* Clipped */;
/* 14 */ GrammarDefinition: "%%" /* Clipped */ Production GrammarDefinitionList /* Vec */;
/* 15 */ GrammarDefinitionList: Production GrammarDefinitionList; // Vec<T>::Push
/* 16 */ GrammarDefinitionList: ; // Vec<T>::New
/* 17 */ Production: Identifier ":" /* Clipped */ Alternations ";" /* Clipped */;
/* 18 */ Alternations: Alternation AlternationsList /* Vec */;
/* 19 */ AlternationsList: "\|" /* Clipped */ Alternation AlternationsList; // Vec<T>::Push
/* 20 */ AlternationsList: ; // Vec<T>::New
/* 21 */ Alternation: AlternationList /* Vec */;
/* 22 */ AlternationList: Factor AlternationList; // Vec<T>::Push
/* 23 */ AlternationList: ; // Vec<T>::New
/* 24 */ Factor: Group;
/* 25 */ Factor: Repeat;
/* 26 */ Factor: Optional;
/* 27 */ Factor: Symbol;
/* 28 */ Symbol: NonTerminal;
/* 29 */ Symbol: SimpleToken;
/* 30 */ Symbol: TokenWithStates;
/* 31 */ Symbol: ScannerSwitch;
/* 32 */ SimpleToken: String SimpleTokenOpt /* Option */;
/* 33 */ SimpleTokenOpt: CutOperator; // Option<T>::Some
/* 34 */ SimpleTokenOpt: ; // Option<T>::None
/* 35 */ TokenWithStates: "<" /* Clipped */ StateList ">" /* Clipped */ String TokenWithStatesOpt /* Option */;
/* 36 */ TokenWithStatesOpt: CutOperator; // Option<T>::Some
/* 37 */ TokenWithStatesOpt: ; // Option<T>::None
/* 38 */ Group: "\(" /* Clipped */ Alternations "\)" /* Clipped */;
/* 39 */ Optional: "\[" /* Clipped */ Alternations "\]" /* Clipped */;
/* 40 */ Repeat: "\{" /* Clipped */ Alternations "\}" /* Clipped */;
/* 41 */ NonTerminal: Identifier NonTerminalOpt /* Option */;
/* 42 */ NonTerminalOpt: CutOperator; // Option<T>::Some
/* 43 */ NonTerminalOpt: ; // Option<T>::None
/* 44 */ Identifier: "[a-zA-Z_][a-zA-Z0-9_]*";
/* 45 */ String: "\u{0022}([^\\]|\\.)*?\u{0022}";
/* 46 */ ScannerState: "%scanner" /* Clipped */ Identifier "\{" /* Clipped */ ScannerStateList /* Vec */ "\}" /* Clipped */;
/* 47 */ ScannerStateList: ScannerDirectives ScannerStateList; // Vec<T>::Push
/* 48 */ ScannerStateList: ; // Vec<T>::New
/* 49 */ StateList: Identifier StateListList /* Vec */;
/* 50 */ StateListList: "," /* Clipped */ Identifier StateListList; // Vec<T>::Push
/* 51 */ StateListList: ; // Vec<T>::New
/* 52 */ ScannerSwitch: "%sc" /* Clipped */ "\(" /* Clipped */ ScannerSwitchOpt /* Option */ "\)" /* Clipped */;
/* 53 */ ScannerSwitch: "%push" /* Clipped */ "\(" /* Clipped */ Identifier "\)" /* Clipped */;
/* 54 */ ScannerSwitch: "%pop" /* Clipped */ "\(" /* Clipped */ "\)" /* Clipped */;
/* 55 */ ScannerSwitchOpt: Identifier; // Option<T>::Some
/* 56 */ ScannerSwitchOpt: ; // Option<T>::None
/* 57 */ CutOperator: "\^" /* Clipped */;
