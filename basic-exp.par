%start Basic
%title "Basic grammar"
%comment "Empty grammar generated by `parol`"
%auto_newline_off

%scanner AfterLn { %auto_newline_off }

%%

/*  0 */ Basic: Line BasicList /* Vec */ BasicSuffix1;
/*  1 */ Basic: EndOfLine Line BasicList /* Vec */ BasicSuffix;
/*  2 */ BasicSuffix1: EndOfLine;
/*  3 */ BasicSuffix1: ;
/*  4 */ BasicSuffix: EndOfLine;
/*  5 */ BasicSuffix: ;
/*  6 */ BasicList: EndOfLine Line BasicList; // Vec<T>::Push
/*  7 */ BasicList: ; // Vec<T>::New
/*  8 */ Line: LineNumber %push(AfterLn) Statement LineList /* Vec */ %pop();
/*  9 */ LineList: ":" Statement LineList; // Vec<T>::Push
/* 10 */ LineList: ; // Vec<T>::New
/* 11 */ Statement: <AfterLn, INITIAL>"REM" StatementSuffix;
/* 12 */ StatementSuffix: Comment;
/* 13 */ StatementSuffix: ;
/* 14 */ Statement: <AfterLn, INITIAL>"GOTO" LineNumber;
/* 15 */ Statement: Literal;
/* 16 */ Statement: Variable;
/* 17 */ LineNumber: "0|[1-9][0-9]{0,4}";
/* 18 */ EndOfLine: <AfterLn, INITIAL>"(\r?\n|\r)+";
/* 19 */ Literal: Number;
/* 20 */ Number: Float;
/* 21 */ Number: Integer;
/* 22 */ Float: <AfterLn>"([0-9] *)*(\. *([0-9] *)*)?(E *[-+]? *([0-9] *)+)?";
/* 23 */ Integer: <AfterLn>"([0-9] *)+";
/* 24 */ Comment: <AfterLn>"[^\r\n]+";
/* 25 */ Variable: <AfterLn, INITIAL>"[A-Z][0-9A-Z]*";
